# -*- coding: utf-8 -*-
"""Copy of PCAStepbyStep.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1veSEznPOj4SaE5gmmjQi84_Moml2B332
"""

from numpy import array
from numpy.linalg import eig
import pandas as pd

A = pd.read_csv('abalone.csv')
# A = array([[-1, 2,0], [2,0,-2],[0, -2,1]])
print(A)

AT=A.transpose()
print(AT)

import numpy as np
AAT=np.matmul(A, AT)
print(AAT)

print("The Rank of a Matrix: ", np.linalg.matrix_rank(A))

from numpy import linalg as LA
w, v=LA.eig(AAT) # drop one column
print(v)
print(w)

w.sort(axis=-1) # Sort the Eigen Values in Asending Order
print(w)
w[1:] # Top 3 elements in a Sorted array

# Method 1: v[:,0:3] # First Three Vectors

# Method 2" Delete column at index 3, as its EigenValue is Very Small

FinalSelectedVectors = np.delete(v, 2, axis=1)
print('Modified Eigen Vectors by removing columns at index 2')
print(FinalSelectedVectors)

# Append two Zero Rows at the end of the Selected Eigen Vectors
AppendedVectors = np.insert(FinalSelectedVectors,[0], [[0]], axis = 1)
print(AppendedVectors)

PCA=np.matmul(A, AppendedVectors)

print(PCA)

print(A.shape, AppendedVectors.shape)

U, s, V = np.linalg.svd(A, full_matrices=True) # , compute_uv=True

U.shape, V.shape, s.shape

print(U)
print(V)
print(s)

